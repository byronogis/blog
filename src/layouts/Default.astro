---
import BaseLayout from '~/layouts/Base.astro'
import BaseHead from '~/components/BaseHead.astro'
import SiteSide from '~/components/SiteSide.astro'
import ControlSide from '~/components/ControlSide.astro'
import Footer from '~/components/Footer.astro'
import SiteSearch from '~/components/SiteSearch.astro'

---

<BaseLayout>
  <slot name="head" slot="head">
    <BaseHead />
  </slot>

  <div class="fixed left-0 lg:(w-20% bg-secondary h-full) xl:(w-[calc((100%-1440px)/2+1440px*0.2)])"></div>
  <div class="relative max-w-1440px m-auto min-h-100dvh flex flex-row layout_default">
    <SiteSide class="flex-none" />
    <main class="flex-1 w-0 p-4 pb-16">
      <slot />

      <SiteSearch />
      <Footer />
    </main>
    <ControlSide class="flex-none" />
  </div>
</BaseLayout>

<script>
  import { pausePageScroll, restorePageScroll } from '~/utils/scroll.js'

  const siteMasksObserver = new MutationObserver((mutationList) => {
    mutationList.forEach((mutation) => {
      const target = mutation.target as HTMLElement

      const isShow = target.classList.contains('!block')
        || target.classList.contains('!translate-none')

      isShow
        ? pausePageScroll()
        : restorePageScroll()

      const isSiteSearch = target.classList.contains('component_site-search')
      if (isSiteSearch && isShow) {
        (target.querySelector('.pagefind-ui__search-input') as HTMLInputElement).focus()
      }
    })
  })

  const siteMasks = document.querySelectorAll('[site-mask]')
  siteMasks.forEach((mask) => {
    siteMasksObserver.observe(mask, {
      attributes: true,
      attributeFilter: ['class'],
    })

    const closeMask = () => mask.classList.remove('!block', '!translate-none')

    mask.addEventListener('click', (e) => {
      const isCurrentTarget = e.target === e.currentTarget
      if (isCurrentTarget) {
        closeMask()
      }
    })

    mask.querySelector('.site-mask__close')?.addEventListener('click', () => {
      closeMask()
    })
  })
</script>
