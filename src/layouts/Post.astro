---
import PostHead from '~/components/PostHead.astro'
import DefaultLayout from '~/layouts/Default.astro'
import PostTOC from '~/components/PostTOC.astro'

let data
let render
let headings
let Content

if (Astro.props.frontmatter) { // used in md
  ;({ frontmatter: data, headings } = Astro.props)
}
else {
  ;({ data, render } = Astro.props)

  ;({ Content, headings } = await render())
}
---

<DefaultLayout>
  <PostHead slot="head" {...data} />

  <div
    class:list={[
      'relative',
      'flex flex-row',
      'layout_post',
    ]}
  >
    <article class:list={[
      'markdown', // unocss typography
      'mx-auto !max-w-[min(90vw,65ch)]',
    ]}>
      <slot>
        {Content ? <Content /> : null}
      </slot>
    </article>

    <aside class:list={[
      'overflow-auto overscroll-contain p-4',
      'lt-lg:(fixed z-100 left-4 right-4 top-4 h-60lvh m-auto translate-x--100vw transition-all bg-strong shadow-md)',
      'lg:(sticky top-0 w-20vw h-100dvh max-h-100dvh bg-transparent text-text:70)',
      'layout_post__toc',
    ]}>
      <PostTOC
        range={[2, 4]}
        number={true}
        line={true}
        key="post-aside"
        headings={headings.map(heading => ({ ...heading, title: heading.text, url: `#${heading.slug}` }))}
      />
    </aside>

  </div>
</DefaultLayout>

<script>
  const toc = document.querySelector('.layout_post__toc')
  toc?.addEventListener('click', ({ target }) => {
    if (window.innerWidth >= 1024 || target?.tagName !== 'A') return
    toc.classList.remove('!translate-none')
  })
</script>
