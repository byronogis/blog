---
import { site } from '~/setting'

const { class: className } = Astro.props
---

<aside class:list={[
  className,
  'component_control-side',
  'fixed z-1000 bottom-8 right-8 grid grid-cols-1 gap-y-2 text-10 w-10',
  'lt-md:(box-content p-2 bg-secondary rounded-2 shadow-md)',
  '[&>*]:(h-10 overflow-hidden)',
]}>
  <!-- toc -->
  <button class:list={[
    site.iconMap.toc,
    'component_control-side_post-toc__button',
    'site-opacity',
    'md:(hover:opacity-100)',
    'lg:(hidden)',
  ]}/>

  <!-- menu -->
  <button class:list={[
    site.iconMap.menu,
    'component_control-side_site-side__button',
    'site-opacity',
    'md:(hidden)',
  ]}/>

</aside>

<script>
  import { goPath } from '~/utils/path'

  const postToc = document.querySelector('.layout_post__toc')
  const siteSide = document.querySelector('.component_site-side')

  const controlSide = document.querySelector('.component_control-side')
  controlSide?.addEventListener('click', ({target}) => {
    if (target?.classList.contains('component_control-side_post-toc__button')) { // post toc
      if(!postToc) return
      siteSide?.classList.remove('!translate-none')
      postToc?.classList.toggle('!translate-none')
    } else if (target?.classList.contains('component_control-side_site-side__button')) { // site side
      if(!siteSide) return
      postToc?.classList.remove('!translate-none')
      siteSide.classList.toggle('!translate-none')
    } else {
      return
    }
  })

  const tocButton = document.querySelector('.component_control-side_post-toc__button')
  postToc || tocButton && (tocButton.style.display = 'none')

</script>
